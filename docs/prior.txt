======
Priors
======

---------------
Defining priors
---------------

Priors refer to the prior probability distributions for each model parameter.
Typically, these are passed into :ref:`run_sampler <run_sampler>` as a regular
`python dictionary
<https://docs.python.org/2/tutorial/datastructures.html#dictionaries>`_.

The keys of the priors objects should reference the model parameters, in
particular, the :code:`parameters` attribute of the :ref:`likelihood`. Each key
can be either

- fixed number, in which case the value is held fixed at this value. In effect,
  this is a Delta-function prior,
- or a :code:`bilby.prior.Prior` instance.

If the latter, it will be sampled during the parameter estimation. Here is a
simple example that sets a uniform prior for :code:`a`, and a fixed value for
:code:`b`::

   priors = {}
   priors['a'] = bilby.prior.Uniform(minimum=0, maximum=10, name='a', latex_label='a')
   priors['b'] = 5

Notice, that the :code:`latex_label` is optional, but if given will be used
when generating plots.

--------------
Default priors
--------------

If any model parameter required by the :ref:`likelihood` are not defined in the
`priors` dictionary passed to :ref:`run_sampler <run_sampler>` then the code
will try to use a default prior. By default, these are setup for a binary black
hole and defined in a file like this

.. literalinclude:: /../bilby/gw/prior_files/binary_black_holes.prior

You can define your own default prior and pass a string pointing to that file
to :ref:`run_sampler <run_sampler>`.


--------------------------
The bilby prior dictionary
--------------------------

The :code:`priors` passed into :code:`run_sampler` can just be a regular python
dictionary. However, we also provide a class :code:`bilby.core.prior.PriorDict`
which provides extra functionality. For example, to sample from the prior:

.. code:: python

   >>> priors = bilby.core.priors.PriorDict()
   >>> priors['a'] = bilby.prior.Uniform(minimum=0, maximum=10, name='a')
   >>> priors['b'] = bilby.prior.Uniform(minimum=0, maximum=10, name='b')
   >>> priors.sample()
   {'a': 0.1234, 'b': 4.5232}

Here is the detailed API information:

.. autoclass:: bilby.core.prior.PriorDict
   :members:

   .. automethod:: __init__

-----------------------
Available prior classes
-----------------------

We have provided a number of standard priors. Here we document a few of them,
note that this list is incomplete.

.. autoclass:: bilby.core.prior.Uniform
   :members:
   :special-members:

.. autoclass:: bilby.core.prior.Gaussian
   :members:
   :special-members:

Defining your own prior
=======================

You can define your own by subclassing the :code:`bilby.prior.Prior` class.

.. autoclass:: bilby.core.prior.Prior
   :members:
   :special-members:
